module.exports = {
  init: {
    mineInitialBitcoin: true, // Whether to mine initial 200 bitcoin blocks
    federatesLogbackFile: '/path/to/config/logback.xml' // Logback configuration file to use for automatically started federate nodes
  },
  runners: {
    bitcoin: {  // if you're running your own bitcoind
      host: '127.0.0.1',
      port: '18444',
      rpcPort: '18443',
      rpcUser: 'test',
      rpcPassword: 'test'
    },
    federates: [{ // if you're running your own federate node(s)
      host: '127.0.0.1:4444', // RPC host of the manually-started node
      publicKeys: {
        btc: '0362634ab57dae9cb373a5d536e66a8c4f67468bbcfb063809bab643072d78a124', // BTC public key of the manually started node
        rsk: '0362634ab57dae9cb373a5d536e66a8c4f67468bbcfb063809bab643072d78a124', // RSK public key of the manually started node
        mst: '0362634ab57dae9cb373a5d536e66a8c4f67468bbcfb063809bab643072d78a124', // MST public key of the manually started node
      }
    }]
  },
  btc: { // Automatically started bitcoind configuration (exclusive w.r.t. runners.bitcoin)
    rpcUser: 'test',
    rpcPassword: 'test'
  },
  federate: [{ // Federate node configuration, can be an array to start multiple federate nodes
    printOutput: true,  // Whether to echo output from this federate to stdout (defaults to false)
    logbackFile: '/path/to/your/logback.xml', // path to the custom logback file for this federate (defaults to $federatesLogbackFile)
    removeDataDirOnStop: true, // Whether to remove the data dir upon stopping the server (defaults to true)
    classpath: '/path/to/federate-node/build/libs/federate-node-0.4.2-SNAPSHOT-all.jar',
    configFile: '../configs/rsk-reg-1.conf',
    // Public keys of the node - can be different - must match those of the node configuration
    // No need to set these if using an HSM
    publicKeys: {
      btc: '0362634ab57dae9cb373a5d536e66a8c4f67468bbcfb063809bab643072d78a124',
      rsk: '0362634ab57dae9cb373a5d536e66a8c4f67468bbcfb063809bab643072d78a124',
      mst: '0362634ab57dae9cb373a5d536e66a8c4f67468bbcfb063809bab643072d78a124',
    },
    // Node id of the node (must match that of the specified configuration)
    nodeId: '62634ab57dae9cb373a5d536e66a8c4f67468bbcfb063809bab643072d78a1243bd206c2c7a218d6ff4c9a185e71f066bd354e5267875b7683fbc70a1d455e87',
    customConfig: { // Custom configurations to pass on the commandline as '-D' on node startup
      'federator.bitcoinPeerAddresses.0': '127.0.0.1:18332', // if you're running your own bitcoind
    },
    hsmConfigs: { // If present, will attempt to also start one HSM server per configured key id (can configure more than one)
      [btc,rsk,mst]: {
        version: '[1,2,2_stateless]',
        useDocker: true/false, // Optional. If you are using hsm 2 on mac os set it to true, as the simulator binary is compiled for linux only.
        serverPath: '/path/to/fedhm/fedhm-mockup.py' or 'PATH/TO/hsm/v2/sim/0.0.3/sim',
        port: 40005, // Optional
        keyPath: '../configs/keys/reg1.key', // Path to the key file to use for this hsm server (emulator only)
        printOutput: false, // Whether to echo output from this hsm to stdout (defaults to false)
      }
    }
  }],
  additionalFederateNodes: [
    {
      // Federate node configuration
    }
  ]
}
